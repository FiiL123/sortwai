services:
  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "6432:5432"

  web:
    build:
      context: .
      target: web
    volumes:
      - .:/app
    command: "poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=psql://postgres:postgres@db/postgres
    env_file:
      - .env
    depends_on:
      - db
  #    volumes:
  #      - ./sortwai:/app/sortwai

  api:
    build:
      context: .
      target: web
    volumes:
      - .:/app
    command: "poetry run uvicorn API.main:app --host 0.0.0.0 --port 6969 --reload"
    ports:
      - "6969:6969"
    environment:
      - NEO4J_URI=bolt://neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=bitnami1
    env_file:
      - api.env
    depends_on:
      neo4j:
        condition: service_healthy
        restart: true

  barcode:
    build:
      context: .
      target: web
    command: "poetry run fastapi run ./barcode-service/api.py --port 8000"
    ports:
      - "8003:8000"

  image_recognition:
    build:
      context: .
      target: web
    command: "poetry run fastapi run ./image-recognition-service/main.py --port 8000"
    env_file:
      - api.env
    ports:
      - "8002:8000"
    volumes:
      - ./:/app

  llm-document-api:
    build:
      context: .
      target: llm-document-api
    ports:
      - "8001:8000"
    environment:
      - NEO4J_URI=bolt://neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=bitnami1
      - NEO4J_CHAT_URI=bolt://neo4j_chat
    env_file:
      - api.env
    depends_on:
      neo4j:
        condition: service_healthy
        restart: true

  search-api:
    build:
      context: .
      target: web
    ports:
      - "8004:8000"
    environment:
      - NEO4J_URI=bolt://neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=bitnami1
    env_file:
      - api.env
    command: "poetry run fastapi run ./search-service/main.py --port 8000"
    depends_on:
      neo4j:
        condition: service_healthy
        restart: true

  chat-document-api:
    build:
      context: .
      target: chat-document-api
    volumes:
      - .:/app
    command: "poetry run uvicorn chat-document-api.main:app --host 0.0.0.0 --port 9000 --reload"
    ports:
      - "9000:9000"
    environment:
      - NEO4J_URI=bolt://neo4j_chat
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=bitnami1
    env_file:
      - api.env
    depends_on:
      neo4j_chat:
        condition: service_healthy
        restart: true

  neo4j:
    image: bitnami/neo4j
    volumes:
      - neo4j_data:/bitnami
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      start_period: 30s
      start_interval: 3s
      interval: 10s
      retries: 5

  neo4j_chat:
    image: bitnami/neo4j
    volumes:
      - neo4j_data_chat:/bitnami
    ports:
      - "8474:7474"
      - "8687:7687"
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      start_period: 30s
      start_interval: 3s
      interval: 10s
      retries: 5

volumes:
  postgres_data:
  neo4j_data:
  neo4j_data_chat:
